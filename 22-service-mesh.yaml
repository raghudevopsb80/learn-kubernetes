---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    appName: nginx
spec:
  containers:
    - name: nginx
      image: nginx
      ports:
      - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    appName: nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: debug1
---
apiVersion: v1
kind: Pod
metadata:
  name: debug1
  labels:
    appName: debug1
spec:
  serviceAccountName: debug1
  containers:
    - name: debug1
      image: rkalluru/debug

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: debug2
---
apiVersion: v1
kind: Pod
metadata:
  name: debug2
  labels:
    appName: debug2
spec:
  serviceAccountName: debug2
  containers:
    - name: debug2
      image: rkalluru/debug


---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
spec:
  mtls:
    mode: STRICT  # Enforce mTLS for all services in this namespace
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
 name: allow-debug
spec:
  selector:
    matchLabels:
      appName: nginx
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/default/sa/debug1"]
  - to:
    - operation:
        paths: ["/"]
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: deny-others
  namespace: default
spec:
  selector:
    matchLabels:
      appName: nginx
  action: DENY
  rules:
  - from:
    - source:
        notPrincipals: ["cluster.local/ns/default/sa/debug1"]
# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: test
#   labels:
#     istio-injection: enabled
# ---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: debug
#   namespace: test
#   labels:
#     appName: debug
# spec:
#   containers:
#     - name: debug
#       image: rkalluru/debug
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  annotations:
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:633788536644:certificate/764c1d94-5562-48f4-be92-fca22568f53d
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: roboshop
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  ingressClassName: alb
  rules:
  - host: nginx-test.rdevopsb80.online
    http:
      paths:
      - backend:
          service:
            name: nginx
            port:
              number: 80
        path: /
        pathType: Prefix

---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default
spec:
  mtls:
    mode: STRICT  # Enforce mTLS for all services in this namespace
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
 name: nginx
spec:
  selector:
    matchLabels:
      appName: nginx
  action: ALLOW
  rules:
    - {}
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: nginx
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: nginx
spec:
  hosts:
  - "*"
  gateways:
  - nginx
  http:
  - match:
    - uri:
        exact: /
    route:
    - destination:
        host: nginx
        port:
          number: 80
